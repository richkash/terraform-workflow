name: Terraform Workflow

on:
  workflow_dispatch:
  # pull_request:
  #   branches: [ main ]
  # push:
  #   branches: [ main ]

env:
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_IN_AUTOMATION: true

jobs:
  terraform-fmt:
    name: Terraform Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Format
        run: terraform fmt -check -diff

  terraform-plan:
    name: Terraform Plan
    # if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: terraform-fmt
    steps:
      - uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        run: terraform init -input=false
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan
      - name: Save Plan File
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan
      - name: Show Plan
        run: terraform show -no-color tfplan > plan.txt
      - name: Comment Plan on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: plan.txt

  terraform-apply:
    name: Terraform Apply
    # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: terraform-plan
    steps:
      - uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        run: terraform init -input=false
      - name: Download Plan File
        uses: actions/download-artifact@v3
        with:
          name: tfplan
          path: .
      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve tfplan
